#include "Visualizer.hpp"

namespace vis {

    void clearScreen() {
        std::cout << "\033[2J\033[H";
    }

    void timer(int duration) {
        while (duration > 0) {
            int minutes = duration / 60;
            int seconds = duration % 60;
            clearScreen();
            opening();
            std::cout << "\033[97mStock Market is open for: " << minutes << " minutes " << seconds << " seconds\033[0m" << std::endl;
            std::this_thread::sleep_for(std::chrono::seconds(1));
            --duration;
        }
        clearScreen();
        closing();
    }

    void opening() {
        std::cout << "\x1B[8;33;120t " << "\033[1;32m" R"(
            ███████ ████████  ██████   ██████ ██   ██     ███    ███  █████  ██████  ██   ██ ███████ ████████ 
            ██         ██    ██    ██ ██      ██  ██      ████  ████ ██   ██ ██   ██ ██  ██  ██         ██    
            ███████    ██    ██    ██ ██      █████       ██ ████ ██ ███████ ██████  █████   █████      ██    
                 ██    ██    ██    ██ ██      ██  ██      ██  ██  ██ ██   ██ ██   ██ ██  ██  ██         ██    
            ███████    ██     ██████   ██████ ██   ██     ██      ██ ██   ██ ██   ██ ██   ██ ███████    ██    
                                                                                                            
                                                                                                            
            ██ ███████            ██████  ██████  ███████ ███    ██                                                 
            ██ ██                ██    ██ ██   ██ ██      ████   ██                                                 
            ██ ███████           ██    ██ ██████  █████   ██ ██  ██                                                 
            ██      ██           ██    ██ ██      ██      ██  ██ ██                                                 
            ██ ███████            ██████  ██      ███████ ██   ████                                                 
                                                
            )""\033[0m" << std::endl;
    }

    void closing() {
        std::cout << "\x1B[8;33;120t " << "\033[1;31m" R"(

            ███████ ████████  ██████   ██████ ██   ██     ███    ███  █████  ██████  ██   ██ ███████ ████████ 
            ██         ██    ██    ██ ██      ██  ██      ████  ████ ██   ██ ██   ██ ██  ██  ██         ██    
            ███████    ██    ██    ██ ██      █████       ██ ████ ██ ███████ ██████  █████   █████      ██    
                 ██    ██    ██    ██ ██      ██  ██      ██  ██  ██ ██   ██ ██   ██ ██  ██  ██         ██    
            ███████    ██     ██████   ██████ ██   ██     ██      ██ ██   ██ ██   ██ ██   ██ ███████    ██    
                                                                                                            
                                                                                                            
            ██ ███████      ██████ ██       ██████  ███████ ███████ ██████                                    
            ██ ██          ██      ██      ██    ██ ██      ██      ██   ██                                   
            ██ ███████     ██      ██      ██    ██ ███████ █████   ██   ██                                   
            ██      ██     ██      ██      ██    ██      ██ ██      ██   ██                                   
            ██ ███████      ██████ ███████  ██████  ███████ ███████ ██████                                    
                                                                        
            )""\033[0m" << std::endl;
    }

} // namespace vis